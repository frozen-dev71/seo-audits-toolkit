[{"/Users/stan/Documents/Dev/prod/SEO_Django/test-admin/src/reportWebVitals.js":"1","/Users/stan/Documents/Dev/prod/SEO_Django/test-admin/src/App.js":"2","/Users/stan/Documents/Dev/prod/SEO_Django/test-admin/src/index.js":"3","/Users/stan/Documents/Dev/prod/SEO/admin/src/index.js":"4","/Users/stan/Documents/Dev/prod/SEO/admin/src/App.js":"5","/Users/stan/Documents/Dev/prod/SEO/admin/src/reportWebVitals.js":"6","/Users/stan/Documents/Dev/prod/SEO/admin/src/custom/fields/urlField.js":"7","/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/index.js":"8","/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/AppBar.js":"9","/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/Layout.js":"10","/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/Logo.js":"11","/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/theme.js":"12","/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/extractorList.js":"13","/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/index.js":"14","/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/extractorCreate.js":"15","/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/extractorShow.js":"16","/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/extractorFilter.js":"17"},{"size":362,"mtime":1607892287903,"results":"18","hashOfConfig":"19"},{"size":465,"mtime":1607898382153,"results":"20","hashOfConfig":"19"},{"size":500,"mtime":1607892287901,"results":"21","hashOfConfig":"19"},{"size":500,"mtime":1608211816192,"results":"22","hashOfConfig":"23"},{"size":648,"mtime":1608236903698,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1608211816192,"results":"25","hashOfConfig":"23"},{"size":617,"mtime":1608236618081,"results":"26","hashOfConfig":"23"},{"size":88,"mtime":1608235931885,"results":"27","hashOfConfig":"23"},{"size":1479,"mtime":1608236457302,"results":"28","hashOfConfig":"23"},{"size":530,"mtime":1608236448864,"results":"29","hashOfConfig":"23"},{"size":188,"mtime":1608236310914,"results":"30","hashOfConfig":"23"},{"size":3922,"mtime":1608235627165,"results":"31","hashOfConfig":"23"},{"size":673,"mtime":1608248669852,"results":"32","hashOfConfig":"23"},{"size":256,"mtime":1608237277928,"results":"33","hashOfConfig":"23"},{"size":506,"mtime":1608236945070,"results":"34","hashOfConfig":"23"},{"size":2679,"mtime":1608248006752,"results":"35","hashOfConfig":"23"},{"size":392,"mtime":1608237537435,"results":"36","hashOfConfig":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oeqh9t",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"7rulk6",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/Users/stan/Documents/Dev/prod/SEO_Django/test-admin/src/reportWebVitals.js",[],"/Users/stan/Documents/Dev/prod/SEO_Django/test-admin/src/App.js",["80"],"/Users/stan/Documents/Dev/prod/SEO_Django/test-admin/src/index.js",[],"/Users/stan/Documents/Dev/prod/SEO/admin/src/index.js",[],["81","82"],"/Users/stan/Documents/Dev/prod/SEO/admin/src/App.js",["83","84"],"import React from 'react';\nimport { Admin, Resource, ListGuesser, EditGuesser } from 'react-admin';\nimport drfProvider, { tokenAuthProvider, fetchJsonWithAuthToken } from 'ra-data-django-rest-framework';\nimport {ExtractorList , ExtractorCreate, ExtractorShow}  from './extractor';\nimport { Layout } from './layout';\nconst authProvider = tokenAuthProvider()\n\n\n\n\nconst App = () => (\n    <Admin layout={Layout} dataProvider={drfProvider('http://localhost:8000/api', fetchJsonWithAuthToken)}>\n        <Resource name=\"extractor\" list={ExtractorList} edit={EditGuesser} create={ExtractorCreate} show={ExtractorShow}/>\n    </Admin>\n);\n\nexport default App;","/Users/stan/Documents/Dev/prod/SEO/admin/src/reportWebVitals.js",[],"/Users/stan/Documents/Dev/prod/SEO/admin/src/custom/fields/urlField.js",["85"],"import * as React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nconst useStyles = makeStyles({\n    link: {\n        textDecoration: 'none',\n        color: 'grey'\n    },\n    icon: {\n        width: '0.5em',\n        paddingLeft: 2,\n    },\n});\n\nconst MyUrlField = ({ record = {}, source }) => {\n    const classes = useStyles();\n    return (\n        <a href={record[source]} target=\"_blank\" className={classes.link}>\n            {record[source]}\n            <LaunchIcon className={classes.icon} />\n        </a>\n    );\n}\n\nexport default MyUrlField;",["86","87"],"/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/index.js",[],"/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/AppBar.js",[],"/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/Layout.js",["88","89"],"import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Layout, Sidebar } from 'react-admin';\nimport AppBar from './AppBar';\nimport { darkTheme, lightTheme } from './theme';\nconst CustomSidebar = (props) => React.createElement(Sidebar, Object.assign({}, props, { size: 200 }));\nexport default (props) => {\n    const theme = useSelector((state) => state.theme === 'light' ? darkTheme : lightTheme);\n    return (React.createElement(Layout, Object.assign({}, props, { appBar: AppBar, theme: theme })));\n};","/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/Logo.js",["90"],"import * as React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nconst Logo = (props) => {\n    const theme = useTheme();\n    return (<p>OSAT</p>)};\nexport default Logo;","/Users/stan/Documents/Dev/prod/SEO/admin/src/layout/theme.js",[],"/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/extractorList.js",["91"],"import * as React from \"react\";\nimport { List,ShowButton,  DeleteButton,Datagrid, TextField, DateField, EditButton } from 'react-admin';\nimport MyUrlField from '../custom/fields/urlField';\nimport { ExtractorFilter } from './extractorFilter'\n\nexport const ExtractorList = (props) => (\n  <List {...props}\n  filters={<ExtractorFilter />}\n    >\n    <Datagrid>\n      <TextField source=\"id\" />\n      <MyUrlField source=\"url\" />\n      <TextField source=\"type_audit\"  label=\"Type\" />\n      <TextField source=\"status_job\"  label=\"Type\" />\n      <DateField source=\"begin_date\"  label=\"Date\"/>\n      <ShowButton />\n      <DeleteButton undoable={true} />\n    </Datagrid>\n  </List>\n);\n\n","/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/index.js",["92"],"import { ExtractorList } from './extractorList'\nimport { ExtractorCreate } from './extractorCreate'\nimport { ExtractorShow } from './extractorShow'\nimport { ExtractorFilter} from './extractorFilter'\n\nexport { ExtractorList, ExtractorCreate, ExtractorShow }","/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/extractorCreate.js",[],"/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/extractorShow.js",["93","94","95"],"import * as React from \"react\";\nimport { SimpleShowLayout, Show, TextField } from 'react-admin';\nimport { Table, TableBody, TableRow, TableCell, TableHead } from '@material-ui/core';\n\n\nconst TagsField = ({ record }) => {\n\n    if (record.type_audit == \"HEADERS\") {\n        const results = JSON.parse(record.result.replaceAll(\"'\", '\"'))\n        return (\n            <div>\n                {Object.keys(results).map((key) => (\n                    <div>\n                        { results[key][\"count\"] > 0 ?\n                            (<>\n                                <h3>{key}</h3>\n                                <ul key={key}>\n                                    {results[key][\"values\"].map((value) => (\n                                        <li>{value}</li>\n                                    ))}\n                                </ul>\n                            </>) : (<></>)\n                        }\n\n                    </div>\n                ))}\n            </div>\n        )\n    } else if (record.type_audit == \"IMAGES\") {\n        const results = JSON.parse(record.result.replaceAll(\"'\", '\"').replaceAll(\"None\", '\"None\"'))\n        return (\n            <div class=\"table-responsive\">\n                <Table>\n                    <TableHead class=\"thead-dark\">\n                        <TableRow>\n                            <TableCell scope=\"col\">Image</TableCell>\n                            <TableCell scope=\"col\">Title</TableCell>\n                            <TableCell scope=\"col\">Alt</TableCell>\n\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {results[\"images\"].map(item => (\n                            <TableRow>\n                            <TableCell>\n                                <a href={item.url}>\n                                    <img class=\"img-exTableRowact\" style={{width:'100%', 'max-width':'40px'}} src={item.url} />\n                                </a>\n                            </TableCell>\n                            <TableCell>\n                                {item.title}\n                            </TableCell>\n                            <TableCell>\n                                {item.alt}\n                            </TableCell>\n\n                        </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n        )\n    }\n\n}\n\nexport const ExtractorShow = (props) => (\n    <Show {...props}>\n        <SimpleShowLayout>\n            <TextField source=\"url\" />\n            <TextField source=\"type_audit\" />\n            <TagsField source=\"result\" />\n        </SimpleShowLayout>\n    </Show>\n);\n","/Users/stan/Documents/Dev/prod/SEO/admin/src/extractor/extractorFilter.js",[],{"ruleId":"96","severity":1,"message":"97","line":4,"column":7,"nodeType":"98","messageId":"99","endLine":4,"endColumn":19},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"96","severity":1,"message":"104","line":2,"column":27,"nodeType":"98","messageId":"99","endLine":2,"endColumn":38},{"ruleId":"96","severity":1,"message":"97","line":6,"column":7,"nodeType":"98","messageId":"99","endLine":6,"endColumn":19},{"ruleId":"105","severity":1,"message":"106","line":19,"column":34,"nodeType":"107","endLine":19,"endColumn":49},{"ruleId":"100","replacedBy":"108"},{"ruleId":"102","replacedBy":"109"},{"ruleId":"96","severity":1,"message":"110","line":6,"column":7,"nodeType":"98","messageId":"99","endLine":6,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":7,"column":1,"nodeType":"113","endLine":10,"endColumn":3},{"ruleId":"96","severity":1,"message":"114","line":4,"column":11,"nodeType":"98","messageId":"99","endLine":4,"endColumn":16},{"ruleId":"96","severity":1,"message":"115","line":2,"column":73,"nodeType":"98","messageId":"99","endLine":2,"endColumn":83},{"ruleId":"96","severity":1,"message":"116","line":4,"column":10,"nodeType":"98","messageId":"99","endLine":4,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":8,"column":27,"nodeType":"119","messageId":"120","endLine":8,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":29,"column":34,"nodeType":"119","messageId":"120","endLine":29,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":47,"column":37,"nodeType":"123","endLine":47,"endColumn":128},"no-unused-vars","'authProvider' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'ListGuesser' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["124"],["125"],"'CustomSidebar' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'theme' is assigned a value but never used.","'EditButton' is defined but never used.","'ExtractorFilter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]