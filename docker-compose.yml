version: '3.6'
services:
  redis:
    image: "redis:alpine"
    hostname: redis
    ports:
      - "6379:6379"
  database:
    image: "postgres" # use latest official postgres version
    ports:
      - "5432:5432"
    env_file:
      - database.env # configure postgres
    volumes:
      - database-data:/var/lib/postgresql/data/

  flask:
    build: 
      context: "."
    ports:
      - "5000:5000"
    depends_on:
      - "redis"
    environment:
      - SECRET_KEY=changeme
      - URL_APP=http://localhost:5000
      - FLASK_APP=SEOToolkit
      - FLASK_ENV=development
      - GOOGLE_API_KEY=None
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://unicorn_user:magical_password@database:5432/rainbow_database
  celery:
    build: 
      context: "."
    command: "celery worker -A celery_worker.celery --loglevel=info"
    depends_on:
      - "redis"
    environment:
      - SECRET_KEY=changeme
      - URL_APP=http://localhost:5000
      - FLASK_APP=SEOToolkit
      - FLASK_ENV=development
      - GOOGLE_API_KEY=None
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://unicorn_user:magical_password@database:5432/rainbow_database

volumes:
  database-data: # named volumes can be managed easier using docker-compose